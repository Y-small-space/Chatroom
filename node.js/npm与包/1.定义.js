/*
1.什么是包?
    Node.js 中的第三方模快又叫做包。
    就像电脑和计算机指的是相同的东西，第三方模块和包指的是同一个概念，只不过叫法不同。
2.包的来源：
    不同于 Node js 中的内置模块与自定义模块，包是由第三方个人或团队开发出来的，免费供所有人使用。
3.为什么需要包：
    由于 Node.js的内置模块仅提供了一些底层的API,导致在基于内置模块进行项目开发的时，效率很低。
    包是基于内置模块封装出来的，提供了更高级、更方便的 AP1，极大的提高了开发效率。
    包和内置模块之问的关系，类似于 jQuery 和浏览器内置 API 之间的关系。
4. 从哪里下載包
    国外有一家T公司，叫做npm, Inc. 
    这家公司旗下有一个非常著名的网站：https//www.npmis.com/，它是全球最大的包共享平台，

 */
/* 
如何一次性安装所有的包
可以运行 npm install命令（或 npm i) 一次性安装所有的依赖包：
执行 npm install 命令时，npm 包管理工具会先读取 package.json 中的 dependencies 节点
读取到记录的所有依赖包名称和版本号之后，npm 包管理工具会把这些包一次性下载到项目中
npm install */

/* 
.devDependencies 节点
如果某些包只在项目开发阶段会用到，在项目上线之后不会用到，则建议把这些包记录到devDependencies节点中。
与之对应的，如果某些包在开发和项目上线之后都需要用到，则建议把这些包记录到 dependencies 节点中。 

安装命令：
    安装指定的包，井记录到 devDependencies 节点中
    npm i 包名 -D
    注意：上述命令是简与形式，等价于下面完整的与法：
    npm install包名 --save-dev
如果某些包只在项目开发阶段会用到，在项目上线之后不会用到，
则建议把这些包记录到 devDependencies 节点中。
与之对应的，如果某些包在开发和项目上线之后都需要用到，
则建议把这些包记录到 dependencies 节点中。
*/
/*
包的分类：
    1. 项目包:
        那些被安装到项目的node_ modules目录中的包，都是项目包。
        项目包又分为两类，分别是：
        •开发依赖包（被记录到 devDependencies 节点中的包，只在开发期间会用到）
        •核心依赖包（被记录到 dependencies 节点中的包，在开发期间和项目上线之后都会用到）
        1 npm i 包名 -D #开发依赖包（会被记录到devDependencies节点下）
        2 nom i 包名    #核心依赖包（会被记录到dependencies节点下）
    2. 全局包
        在执行 npm install 命令时，如果提供了-g 参数，则会把包安装为全局包。

    注意
        只有工具性质的包，才有全局安装的必要性。因为它们提供了好用的终端命令。
        判断某个包是否需要全局安装后才能使用，可以参考官方提供的使用说明即可

    规范的包结构：
        在清楚了包的概念、以及如何下载和使用包之后，接下来，我们深入了解一下包的内部结构。
        
        一个规范的包，它的组成结构，必须符合以下 了 点要求：
        ① 包必须以单独的目录而存在
        ② 包的顶级目录下要必须包含package.json这个包管理配置文件
        ③ packagejson中必须包含name,version,main这三个属性，分别代表包的名字、版本号、包的入口。
*/