{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const countReducer = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit 允许我们在 reducers 中编写 mutating 逻辑。\n      // 它实际上并没有 mutate state 因为它使用了 Immer 库，\n      // 它检测到草稿 state 的变化并产生一个全新的基于这些更改的不可变 state\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\nexport const selectCount = state => state.counter.value;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","countReducer","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","counterSlice","actions","incrementAsync","amount","dispatch","setTimeout","selectCount","counter","reducer"],"sources":["/Users/gjy/Desktop/Firstnote/react/React-redux/note/src/redux/count_reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const countReducer = createSlice({\n    name: 'counter',\n    initialState: {\n        value: 0,\n    },\n    reducers: {\n        increment: (state) => {\n            // Redux Toolkit 允许我们在 reducers 中编写 mutating 逻辑。\n            // 它实际上并没有 mutate state 因为它使用了 Immer 库，\n            // 它检测到草稿 state 的变化并产生一个全新的基于这些更改的不可变 state\n            state.value += 1;\n        },\n        decrement: (state) => {\n            state.value -= 1;\n        },\n        incrementByAmount: (state, action) => {\n            state.value += action.payload;\n        },\n    },\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n\nexport const incrementAsync = (amount) => (dispatch) => {\n    setTimeout(() => {\n        dispatch(incrementByAmount(amount))\n    }, 1000)\n}\n\nexport const selectCount = (state) => state.counter.value\n\nexport default counterSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAGC,KAAK,IAAK;MAClB;MACA;MACA;MACAA,KAAK,CAACH,KAAK,IAAI,CAAC;IACpB,CAAC;IACDI,SAAS,EAAGD,KAAK,IAAK;MAClBA,KAAK,CAACH,KAAK,IAAI,CAAC;IACpB,CAAC;IACDK,iBAAiB,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAClCH,KAAK,CAACH,KAAK,IAAIM,MAAM,CAACC,OAAO;IACjC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,SAAS;EAAEE,SAAS;EAAEC;AAAkB,CAAC,GAAGG,YAAY,CAACC,OAAO;AAG/E,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAMC,QAAQ,IAAK;EACpDC,UAAU,CAAC,MAAM;IACbD,QAAQ,CAACP,iBAAiB,CAACM,MAAM,CAAC,CAAC;EACvC,CAAC,EAAE,IAAI,CAAC;AACZ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAIX,KAAK,IAAKA,KAAK,CAACY,OAAO,CAACf,KAAK;AAEzD,eAAeQ,YAAY,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}